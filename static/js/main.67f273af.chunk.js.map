{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/CardsList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","this","id","name","email","className","src","alt","Component","CardsList","robots","robotsArray","map","robo","i","SearchBox","type","placeholder","onChange","searchChange","React","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","SearchText","target","value","state","filteredRobos","filter","robot","toLowerCase","includes","length","fetch","response","json","users","ReactDOM","render","document","getElementById"],"mappings":"4NAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCCeCQ,G,iLAhBJC,GACN,IAAD,EAC8BC,KAAKD,MAAxBE,EADX,EACWA,GAAIC,EADf,EACeA,KAAMC,EADrB,EACqBA,MACjB,OACI,sBAAKF,GAAG,OAAOG,UAAU,qDAAzB,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,SACpD,gCACI,6BAAKJ,IACL,6BAAKD,IACL,4BAAIE,c,GAXLI,cCmBJC,E,qKAjBJT,GACN,IACUU,EAAUT,KAAKD,MAAfU,OACDC,EAAcD,EAAOE,KAAI,SAACC,EAAMC,GAClC,OAAQ,cAAC,EAAD,CACJZ,GAAIQ,EAAOI,GAAGZ,GACdC,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,WAEzB,OACI,8BACKO,Q,GAbOH,aCeTO,G,2KAdJf,GAEH,OACQ,qBAAKK,UAAU,MAAf,SACI,uBACIW,KAAK,SACLC,YAAY,gBACZZ,UAAU,gCACVa,SAAYjB,KAAKD,MAAMmB,qB,GAVvBC,IAAMZ,YCSfa,E,qKARJrB,GAEH,OAAQ,qBAAKsB,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAQ,SAAnE,SACKxB,KAAKD,MAAM0B,e,GALXN,IAAMZ,WC0CZmB,E,kDApCX,aACC,IAAD,8BACI,gBA6BJC,eAAiB,SAACC,GACd,EAAKC,SAAU,CAAEC,WAAYF,EAAMG,OAAOC,SA7B1C,EAAKC,MAAQ,CACTxB,OAAS,GACTqB,WAAY,IAJpB,E,qDASC,IAAD,OACUI,EAAgBlC,KAAKiC,MAAMxB,OAAO0B,QAAO,SAAAC,GAAK,OAAIA,EAAMlC,KAAKmC,cAAcC,SAAS,EAAKL,MAAMH,WAAWO,kBAChH,OAAGrC,KAAKiC,MAAMxB,OAAO8B,OAAUL,EAAcK,OAClC,yCAGP,sBAAKnC,UAAW,KAAhB,UACI,oBAAIH,GAAG,OAAP,0BACA,cAAC,EAAD,CAAWiB,aAAgBlB,KAAK2B,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,CAAWlB,OAAUyB,W,0CAKjB,IAAD,OACfM,MAAM,8CACLhD,MAAK,SAAAiD,GAAQ,OAAIA,EAASC,UAC1BlD,MAAK,SAAAmD,GAAK,OAAI,EAAKd,SAAS,CAACpB,OAAOkC,W,GA9B3BxB,IAAMZ,WCAxBqC,IAASC,OACN,cAAC,EAAD,IACCC,SAASC,eAAe,SAM5B1D,M","file":"static/js/main.67f273af.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React , {Component} from 'react';\r\nimport 'tachyons';\r\nimport './Card.css'\r\n\r\nclass Card extends Component\r\n{\r\n    render(props)\r\n    {\r\n        const {id, name, email} = this.props;\r\n        return (\r\n            <div id='card' className='tc bg-light-blue dib br4 pa1 ma3 grow bw3 shadow-5'>\r\n                <img src={`https://robohash.org/${id}?200x200`} alt='card'/>\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <h1>{id}</h1>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>\r\n        );  \r\n    }\r\n}\r\n\r\nexport default Card;\r\n\r\n\r\n","\r\nimport React , {Component} from 'react';\r\nimport Card from './Card.js'\r\n\r\nclass CardsList extends Component\r\n{\r\n    render(props)\r\n    {\r\n        const {robots} = this.props;\r\n        const robotsArray = robots.map((robo, i)=>{\r\n            return (<Card \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email}/>);\r\n        });\r\n        return(\r\n            <div>\r\n                {robotsArray}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardsList;","import React from \"react\";\r\n//import { robots } from \"./robots\";\r\n\r\nclass SearchBox extends React.Component\r\n{\r\n    render(props)\r\n    {\r\n        return (\r\n                <div className='pa2'>\r\n                    <input \r\n                        type='search' \r\n                        placeholder='Search Robots'\r\n                        className='pa3 ba b--green bg-light-blue'\r\n                        onChange = {this.props.searchChange}/>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBox;","import React  from 'react';\r\n\r\nclass Scroll extends React.Component\r\n{\r\n    render(props)\r\n    {\r\n        return (<div style={{overflowY:'scroll', border:'1px solid black', height: '500px'}}>\r\n                    {this.props.children}\r\n                </div>);\r\n    }\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport CardsList from '../Components/CardsList';\r\nimport './App.css'\r\nimport SearchBox from '../Components/SearchBox.js'\r\nimport Scroll from '../Components/Scroll.js'\r\n\r\nclass App extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            robots : [],\r\n            SearchText: \"\"\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        const filteredRobos = this.state.robots.filter(robot => robot.name.toLowerCase().includes(this.state.SearchText.toLowerCase()));\r\n        if(this.state.robots.length  < filteredRobos.length)\r\n            return <h1>Loading</h1>;\r\n        else\r\n        return (\r\n            <div className ='tc'>\r\n                <h1 id='logo'>ROBO FRIENDS</h1>\r\n                <SearchBox searchChange = {this.onSearchChange} />\r\n                <Scroll>\r\n                    <CardsList robots = {filteredRobos}/>\r\n                </Scroll>\r\n            </div>);\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots:users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState( { SearchText: event.target.value } );\r\n    }\r\n}\r\n\r\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport App from './Containers/App.js';\n\nReactDOM.render(\n   <App/>\n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}